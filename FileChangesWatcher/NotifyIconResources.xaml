<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:Stroiproject"
                    >
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <Separator />
        <MenuItem Header="Open Settings" Command="{Binding OpenIniFile}">
            <MenuItem.Icon>
                <Image Source="/Icons/ini.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <!--
        -->
        <MenuItem Header="Apply Settings" Command="{Binding ApplyIniFile}">
            <MenuItem.Icon>
                <Image Source="/Icons/apply.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <!--
        -->
        <MenuItem Header="Help" Command="{Binding OpenHelp}">
            <MenuItem.Icon>
                <Image Source="/Icons/help.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <!--
        <MenuItem Header="Home page" Command="{Binding OpenHomePage}">
            <MenuItem.Icon>
                <Image Source="/Icons/homepage.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
        -->
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}">
            <MenuItem.Icon>
                <Image Source="/Icons/FileWatcher.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/Icons/FileWatcher.ico"
                    ToolTipText="FileChangesWatcher, right-click for menu"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>