<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:FileChangesWatcher"
                    >

    <!-- элемент меню для добавления в контекстное меню приложения -->
    <Grid x:Key="main_item_grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
    </Grid>
    <MenuItem x:Key="File_menuitem" Grid.Column="0" Grid.Row="0">
    </MenuItem>
    <MenuItem x:Key="Clipboard_menuitem"  Grid.Column="1" Grid.Row="0" ToolTip="Copy to clipboard">
        <MenuItem.Icon>
            <Image Source="/Icons/Clipboard_16x16.ico"   Width="16" Height="16"/>
        </MenuItem.Icon>
    </MenuItem>

    <ControlTemplate x:Key="template_menuItem" TargetType="{x:Type MenuItem}">
        <Grid Background="{TemplateBinding Background}">
            <MenuItem Header="{TemplateBinding Header}" />
        </Grid>
    </ControlTemplate>



    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu" MinWidth="250">
        <Separator x:Name="menu_separator"/>
        <!--
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <MenuItem Grid.Column="0" Grid.Row="0" ToolTip="Copy to clipboard" Command="{Binding OpenHomeFolder}">
                <MenuItem.Icon>
                    <Image Source="/Icons/Clipboard_16x16.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" ToolTip="Go to file" Header="Command" Command="{Binding OpenHomeFolder}">
                <MenuItem.Icon>
                    <Image Source="/Icons/Help.ico" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </Grid>
        -->
        <MenuItem Header="Settings" Background="Transparent" x:Name="menu_settings">
            <MenuItem.Icon>
                <Image Source="/Icons/ini.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
            <MenuItem Header="Open Settings" Command="{Binding OpenIniFile}">
                <MenuItem.Icon>
                    <Image Source="/Icons/ini.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <!--
            -->
            <MenuItem Header="Reload Settings" Command="{Binding ApplyIniFile}">
                <MenuItem.Icon>
                    <Image Source="/Icons/apply.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="cbAutostart" Header="Autostart when Windows starts" 
                        IsCheckable="True"
                        IsChecked="{Binding SaveToDbOneChecked}"
                        Command="{Binding AutostartSetter}"
                        >
            </MenuItem>
            <MenuItem Header="Open Home Folder" Command="{Binding OpenHomeFolder}">
                <MenuItem.Icon>
                    <Image Source="/Icons/home_folder.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Copy paths to clipboard" Command="{Binding CopyPathsToClipboard}">
                <MenuItem.Icon>
                    <Image Source="/Icons/Clipboard_32x32.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Header="Register Windows Explorer Context Menu (Admin)" Command="{Binding RegisterWindowsExplorerContextMenu}">
            </MenuItem>
            <MenuItem Header="UnRegister Windows Explorer Context Menu (Admin)" Command="{Binding UnRegisterWindowsExplorerContextMenu}">
            </MenuItem>

            <!--
            <MenuItem Header="Help" Command="{Binding OpenHelp}">
                <MenuItem.Icon>
                    <Image Source="/Icons/help.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            -->
            <!--
            -->
            <MenuItem Header="Home page" Command="{Binding OpenHomePage}">
                <MenuItem.Icon>
                    <Image Source="/Icons/homepage.ico"   Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="About" Command="{Binding OpenAbout}">
                <MenuItem.Icon>
                    <Image Source="/Icons/FileChangesWatcher.16x16.ico" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" x:Name="menu_exit">
            <MenuItem.Icon>
                <Image Source="/Icons/FileChangesWatcher.ico"   Width="16" Height="16"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/Icons/FileChangesWatcher.ico"
                    ToolTipText="FileChangesWatcher. Right-click for menu"
                    ContextMenu="{StaticResource SysTrayMenu}"
                    PopupActivation="LeftClick"
                    >
        <!--
        <tb:TaskbarIcon.TrayPopup>
            <Border
                      Background="White"
                      BorderBrush="Orange"
                      BorderThickness="2"
                      CornerRadius="4"
                      Width="Auto"
                      Height="Auto"
            >
                <StackPanel MaxWidth="200">
                    <TextBlock x:Name="text_message" Text="aaaaaa"></TextBlock>
                    <Button Content="Click Me!" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </StackPanel>
            </Border>
        </tb:TaskbarIcon.TrayPopup>
        -->
        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>

    <UserControl x:Key="key_custom_popup">
        <Border
                      Background="White"
                      BorderBrush="Orange"
                      BorderThickness="2"
                      CornerRadius="4"
                      Width="160"
                      Height="40"
            >
            <Button Content="Click Me!" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
    </UserControl>
    
</ResourceDictionary>